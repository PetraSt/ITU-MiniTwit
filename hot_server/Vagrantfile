# -*- mode: ruby -*-
# vi: set ft=ruby :
Vagrant.configure("2") do |config|
  config.vm.box = 'digital_ocean'
  config.vm.box_url = "https://github.com/devopsgroup-io/vagrant-digitalocean/raw/master/box/digital_ocean.box"
  config.ssh.private_key_path = '~/.ssh/do_ssh_key'

  config.vm.synced_folder "remote_files", "/minitwit", type: "rsync"
  config.vm.synced_folder '.', '/vagrant', disabled: true


  common_provision_script = <<-SCRIPT
    sudo apt-get update
    sudo apt-get install -y nginx

    sudo apt-get install -y keepalived

    cd /usr/local/bin
    sudo curl -LO http://do.co/assign-ip
    sudo apt-get install -y python3

    cd ~

    sudo cp ../minitwit/master.sh /etc/keepalived/master.sh
    sudo chmod +x /etc/keepalived/master.sh
    sudo chmod +x /minitwit/check_containers.sh

    # Start Keepalived service immediately
    keepalived -S 7 -f /etc/keepalived/keepalived.conf -D -n


  
    # Install docker and docker-compose
    sudo apt install -y apt-transport-https ca-certificates curl software-properties-common
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
    sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable"
    apt-cache policy docker-ce
    sudo apt install -y docker-ce
    sudo systemctl status docker
    sudo usermod -aG docker ${USER}
    sudo apt install -y docker-compose

    # Install make
    sudo apt-get install -y make

    echo -e "\nOpening ports for minitwit ...\n"
    ufw allow 8000 && \
    ufw allow 5000 && \
    ufw allow 5003 && \
    ufw allow 5432 && \
    ufw allow 8082 && \
    ufw allow 8080 && \
    ufw allow 5601 && \
    ufw allow 9200 && \
    ufw allow 6767 && \
    ufw allow 9090 && \
    ufw allow 3000 && \
    ufw allow 22/tcp

    echo ". $HOME/.bashrc" >> $HOME/.bash_profile

    echo -e "\nConfiguring credentials as environment variables...\n"

    source $HOME/.bash_profile

    echo -e "\nSelecting Minitwit Folder as the default folder when you ssh into the server...\n"
    echo "cd /minitwit" >> ~/.bash_profile

    chmod +x /minitwit/deploy.sh
    cd ./minitwit
    docker-compose -f docker-compose.yml up -d

    echo -e "\nVagrant setup done ..."
    echo -e "minitwit will later be accessible at http://$(hostname -I | awk '{print $1}'):8000"
  SCRIPT


  config.vm.define "minitwit2" do |server1|
      server1.vm.network "private_network", ip: "10.114.0.4"
      server1.vm.provider :digital_ocean do |provider|
          provider.ssh_key_name = "do_ssh_key"
          provider.token = ENV["DIGITAL_OCEAN_TOKEN"]
          provider.image = 'ubuntu-22-04-x64'
          provider.region = 'fra1'
          provider.size = 's-2vcpu-4gb'
      end
      server1.vm.hostname = "minitwit-ci-server2"
      server1.vm.provision "shell", inline: 'echo "export DOCKER_USERNAME=' + "'" + ENV["DOCKER_USERNAME"] + "'" + '" >> ~/.bash_profile'
      server1.vm.provision "shell", inline: 'echo "export DOCKER_PASSWORD=' + "'" + ENV["DOCKER_PASSWORD"] + "'" + '" >> ~/.bash_profile'
      server1.vm.provision "shell", inline: 'echo "export DIGITAL_OCEAN_TOKEN=' + "'" + ENV["DIGITAL_OCEAN_TOKEN"] + "'" + '" >> ~/.bash_profile'
      server1.vm.provision "shell", inline: 'echo "export RESERVED_IP=' + "'" + ENV["RESERVED_IP"] + "'" + '" >> ~/.bash_profile'
      server1.vm.provision "shell", inline: 'echo "export DO_TOKEN=' + "'" + ENV["DIGITAL_OCEAN_TOKEN"] + "'" + '" >> ~/.bash_profile'
      
      server1.vm.provision "shell", inline: <<-SCRIPT
        # Provisioning script for minitwit2
        droplet_id=$(curl -s http://169.254.169.254/metadata/v1/id)
        sudo mkdir -p /etc/keepalived
        sudo cp ../minitwit/primary/keepalived.conf /etc/keepalived/keepalived.conf
        sudo apt-get install -y jq
        action=$(curl -X POST \
        -H "Content-Type: application/json" \
        -H "Authorization: Bearer $DIGITAL_OCEAN_TOKEN" \
        -d '{"type":"assign","droplet_id": "'"$droplet_id"'"}' \
        "https://api.digitalocean.com/v2/reserved_ips/$RESERVED_IP/actions")

        echo "Request response: $action"

        #{common_provision_script}

      SCRIPT
  end
  config.vm.define "minitwit3" do |server2|
    server2.vm.network "private_network", ip: "10.114.0.5"
    server2.vm.provider :digital_ocean do |provider|
        provider.ssh_key_name = "do_ssh_key"
        provider.token = ENV["DIGITAL_OCEAN_TOKEN"]
        provider.image = 'ubuntu-22-04-x64'
        provider.region = 'fra1'
        provider.size = 's-2vcpu-4gb'
    end
    server2.vm.hostname = "minitwit-ci-server3"
    server2.vm.provision "shell", inline: 'echo "export DOCKER_USERNAME=' + "'" + ENV["DOCKER_USERNAME"] + "'" + '" >> ~/.bash_profile'
    server2.vm.provision "shell", inline: 'echo "export DOCKER_PASSWORD=' + "'" + ENV["DOCKER_PASSWORD"] + "'" + '" >> ~/.bash_profile'
    server2.vm.provision "shell", inline: 'echo "export DIGITAL_OCEAN_TOKEN=' + "'" + ENV["DIGITAL_OCEAN_TOKEN"] + "'" + '" >> ~/.bash_profile'
    server2.vm.provision "shell", inline: 'echo "export RESERVED_IP=' + "'" + ENV["RESERVED_IP"] + "'" + '" >> ~/.bash_profile'
    server2.vm.provision "shell", inline: 'echo "export DO_TOKEN=' + "'" + ENV["DIGITAL_OCEAN_TOKEN"] + "'" + '" >> ~/.bash_profile'
    
    server2.vm.provision "shell", inline: <<-SCRIPT
      # Provisioning script for minitwit3
      sudo mkdir -p /etc/keepalived
      sudo cp ../minitwit/secondary/keepalived.conf /etc/keepalived/keepalived.conf
      #{common_provision_script}
    SCRIPT
  end
  
  
end
