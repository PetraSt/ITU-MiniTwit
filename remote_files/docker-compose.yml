# Passwords are explicit, for tests only, do not use for production :)
version: '3'
services:
  postgres:
    image: ${DOCKER_USERNAME}/minitwitdb
    container_name: DB-postgres
    restart: always
    volumes:
      - postgres_volume:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - main

  adminer:
    image: adminer
    container_name: DB-postgres-interface
    restart: always
    ports:
      - 8082:8080
    networks:
      - main

  api:
    image: ${DOCKER_USERNAME}/apiminitwit
    container_name: API
    depends_on:
      - postgres
    ports:
      - 8080:8080
    networks:
      - main

  app:
    image: ${DOCKER_USERNAME}/minitwitimage
    container_name: APP
    command: >
      sh -c "
            python manage.py runserver 0.0.0.0:8000"
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_HOST: DB-postgres
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - 8000:8000
    links:
      - postgres
    networks:
      - main

  prometheus:
    image: petrastm/prometheus
    container_name: prometheus
    networks:
      - main


  grafana:
    image: petrastm/grafana
    container_name: grafana
    ports:
      - "5003:3000"
    networks:
      - main

  elasticsearch:
    image: "docker.elastic.co/elasticsearch/elasticsearch:7.2.0"
    environment:
        - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
        - "discovery.type=single-node"
    volumes:
        - elk-elasticsearch-volume:/usr/share/elasticsearch/data
    networks:
        - elk

  kibana:
    image: "docker.elastic.co/kibana/kibana:7.2.0"
    environment:
        elasticsearch.hosts: '["http://elasticsearch:9200"]'
    networks:
        - elk

  filebeat:
    image: petrastm/filebeat
    volumes:
        - /var/lib/docker:/var/lib/docker:ro
        - /var/run/docker.sock:/var/run/docker.sock
    networks:
        - elk
          
  nginx: 
    image: petrastm/nginx
    ports:
      - 9200:9200
      - 5000:5601
    networks:
      - elk

volumes:
  postgres_volume:
  elk-elasticsearch-volume:

networks:
  main:
    name: itu-minitwit-network
  elk:
    name: elk-network
